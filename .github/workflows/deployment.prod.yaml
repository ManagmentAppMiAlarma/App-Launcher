name: EC2 Production Deployment

on:
  pull_request:
    branches: [main]

jobs:
  avoid_redundancy:
    runs-on: ubuntu-22.04
    steps:
      - name: Cancel Previous Redundant Deployments
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{github.token}}

  deploy:
    needs: avoid_redundancy
    runs-on: aws-ec2-mialarma-app
    steps:
      - uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
      - name: Stopping and Removing containers
        run: |
          echo "CLIENT_GATEWAY_PORT=${{ secrets.CLIENT_GATEWAY_PORT }}" >> .env
          echo "NATS_SERVERS=${{ secrets.NATS_SERVERS }}" >> .env
          echo "CLIENT_MS_PORT=${{ secrets.CLIENT_MS_PORT }}" >> .env
          echo "MONGO_CLIENT_URL=${{ secrets.MONGO_CLIENT_URL }}" >> .env
          echo "AUTH_MS_PORT=${{ secrets.AUTH_MS_PORT }}" >> .env
          echo "MONGO_AUTH_URL=${{ secrets.MONGO_AUTH_URL }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          ls
          cat .env
          sudo docker compose -f docker-compose.prod.yml down
      - name: Deleting old images
        run: sudo docker image rm auth-ms-prod clients-ms-prod client-api-gateway-prod nats
      - name: Building application
        run: sudo docker compose -f docker-compose.prod.yml build
      - name: Deploying application in production
        run: sudo docker compose -f docker-compose.prod.yml --env-file .env up -d
